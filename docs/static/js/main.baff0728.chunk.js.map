{"version":3,"sources":["assets/title.png","assets/logo.png","components/utils/calculateWinner.js","hooks/superBoard/superBoardProvider.js","hooks/superBoard/useSuperBoard/useSuperBoard.js","components/Square/square.js","components/Winner/Winner.js","components/Board/board.js","components/SuperBoard/SuperBoard.js","components/Game/game.js","App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","squares","validSquares","reduce","acc","cur","push","lines","i","length","a","b","c","SuperBoardContext","React","createContext","InitialState","boards","Array","fill","winner","stepNumber","xIsNext","superBoardReducer","state","action","type","map","board","index","boardId","SuperBoardProvider","children","useReducer","dispatch","contextValue","useMemo","Provider","value","UseSuperBoard","useContext","winners","endGame","filter","Boolean","restart","updateTurn","setWinner","setDraw","setSuperWinner","Square","props","squareId","useSuperBoard","className","onClick","slice","handleClick","Winner","superWinner","imageUrl","classnames","width","height","src","alt","Board","hasBorder","useEffect","SuperBoard","Game","id","Logo","Title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baff0728.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/title.726388aa.png\";","export default __webpack_public_path__ + \"static/media/logo.24944eed.png\";","export const calculateWinner = (squares) => {\n  const validSquares = squares.reduce((acc, cur) => {\n    acc.push(cur === 'D' ? null : cur)\n    return acc\n  }, [])\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (validSquares[a] && validSquares[a] === validSquares[b] && validSquares[a] === validSquares[c]) {\n      return validSquares[a];\n    }\n  }\n  return null;\n}\n","import React, {useMemo, useReducer} from 'react';\n\nexport const SuperBoardContext = React.createContext()\n\nconst InitialState = {\n  boards: Array(9).fill({\n    squares: Array(9).fill(null),\n    winner: null\n  }),\n  winner: null,\n  stepNumber: 0, //determina em qual jogada o jogo esta\n  xIsNext: true, //determina quem é o próximo a jogar X ou O\n}\n\nexport const superBoardReducer = (state, action) => {\n  switch (action.type) {\n    case 'RESTART':\n      return InitialState\n    case 'SET_SUPER_WINNER':\n      return {\n        ...state,\n        winner: action.winner\n      }\n    case 'SET_DRAW':\n      return {\n        ...state,\n        boards: state.boards.map((board, index) => {\n          if (index !== action.boardId) return board\n          return {\n            ...board,\n            winner: 'D'\n          }\n        }),\n      }\n    case 'SET_WINNER':\n      return {\n        ...state,\n        boards: state.boards.map((board, index) => {\n          if (index !== action.boardId) return board\n          return {\n            ...board,\n            winner: state.xIsNext ? 'O' : 'X'\n          }\n        }),\n      }\n    case 'UPDATE_TURN':\n      return {\n        boards: state.boards.map((board, index) => {\n            if (index !== action.boardId) return board\n            return {\n              ...board,\n              squares: action.squares\n            }\n          }),\n        stepNumber: state.stepNumber + 1,\n        xIsNext: !state.xIsNext,\n      }\n    default:\n      return state\n  }\n}\nconst SuperBoardProvider = ({ children}) => {\n  const [state, dispatch] = useReducer(superBoardReducer, InitialState)\n  const contextValue = useMemo(() => ({state, dispatch}), [state, dispatch])\n\n  return <SuperBoardContext.Provider value={contextValue}>{children}</SuperBoardContext.Provider>\n};\n\nexport default SuperBoardProvider;\n","import {useContext} from 'react';\nimport {SuperBoardContext} from \"../superBoardProvider\";\nimport {calculateWinner} from \"../../../components/utils/calculateWinner\";\n\nconst UseSuperBoard = (boardId) => {\n  const { state: {boards, stepNumber, xIsNext, winner}, dispatch } = useContext(SuperBoardContext)\n\n  const winners = boards.map(board => board.winner)\n\n  const endGame = winners.filter(Boolean).length > 7\n\n  const calculateSuperWinner = () => {\n    return calculateWinner(winners)\n  }\n\n  return {\n    boards,\n    stepNumber,\n    xIsNext,\n    winner,\n    endGame,\n    board: boards[boardId],\n    restart: () => dispatch({type: 'RESTART'}),\n    updateTurn: (squares) => dispatch({type: 'UPDATE_TURN', squares, boardId}),\n    setWinner: () => dispatch({type: 'SET_WINNER', boardId}),\n    setDraw: () => dispatch({type: 'SET_DRAW', boardId}),\n    setSuperWinner: () => dispatch({type: 'SET_SUPER_WINNER', winner: calculateSuperWinner()}),\n  }\n};\n\nexport default UseSuperBoard;\n","import React from 'react';\nimport './square.css';\nimport {calculateWinner} from \"../utils/calculateWinner\";\nimport {useSuperBoard} from \"../../hooks/superBoard\";\n\nconst Square = (props) => {\n  const { squareId, boardId } = props;\n\n  const { board, xIsNext, updateTurn } = useSuperBoard(boardId)\n\n  const handleClick = () => {\n    if (calculateWinner(board.squares) || board.squares[squareId]) {\n      return;\n    }\n\n    const squares = board.squares.slice()\n    squares[squareId] = xIsNext ? 'X' : 'O';\n\n    updateTurn(squares)\n  }\n\n  return (\n    <button className=\"square\" onClick={() => handleClick()}>\n      {board.squares[squareId]}\n    </button>\n  )\n}\nexport default Square;\n","import React from 'react';\nimport './Winner.css'\nimport classnames from \"classnames\";\n\nconst Winner = (props) => {\n  const { winner, superWinner } = props\n\n  const imageUrl = winner === 'X'\n    ? 'https://contmoura.com.br/wp-content/uploads/2019/09/x-png-icon-8.png'\n    : 'https://i.imgur.com/rCwsdBw.png'\n\n  return <div className={classnames('image-wrapper', {\n    'super': superWinner\n  })}>\n    <img width='100%' height='100%' className='image' src={imageUrl} alt={winner}/>\n  </div>\n};\n\nexport default Winner;\n","import React, {useEffect} from 'react';\nimport Square from '../Square';\nimport './board.css';\nimport classnames from \"classnames\";\nimport {useSuperBoard} from \"../../hooks/superBoard\";\nimport {calculateWinner} from \"../utils/calculateWinner\";\nimport Winner from \"../Winner\";\n\nconst Board = (props) => {\n  const { hasBorder = false, boardId } = props\n  const { board, setWinner, setDraw } = useSuperBoard(boardId)\n\n  const winner = calculateWinner(board.squares)\n\n  useEffect(() => {\n    if (winner) {\n      setWinner()\n      return\n    }\n    if (board.length > 8){\n      setDraw()\n    }\n  }, [winner])\n\n  return (\n    <div className=\"board-wrapper\">\n      { winner && <Winner winner={winner} />}\n      <div className=\"board-row\">\n        <Square squareId={0} boardId={boardId}/>\n        <Square squareId={1} boardId={boardId}/>\n        <Square squareId={2} boardId={boardId}/>\n      </div>\n      <div className=\"board-row\">\n        <Square squareId={3} boardId={boardId}/>\n        <Square squareId={4} boardId={boardId}/>\n        <Square squareId={5} boardId={boardId}/>\n      </div>\n      <div className={classnames(\"board-row\", {\n        'board-border': hasBorder\n      })}>\n        <Square squareId={6} boardId={boardId}/>\n        <Square squareId={7} boardId={boardId}/>\n        <Square squareId={8} boardId={boardId}/>\n      </div>\n    </div>\n  );\n\n}\n\nexport default Board;\n","import React, {useEffect} from 'react';\nimport Board from \"../Board\";\nimport {useSuperBoard} from \"../../hooks/superBoard\";\nimport './superBoard.css'\nimport Winner from \"../Winner\";\n\nconst SuperBoard = () => {\n  const { winner, setSuperWinner } = useSuperBoard()\n\n  useEffect(() => {\n    setSuperWinner()\n  }, [winner])\n\n  return (\n    <div className=\"super-board-wrapper\">\n      { winner && <Winner winner={winner} superWinner/>}\n      <div className=\"board-border-right\">\n        <Board hasBorder boardId={0}/>\n        <Board hasBorder boardId={1}/>\n        <Board boardId={2}/>\n      </div>\n      <div className=\"board-border-right\">\n        <Board hasBorder boardId={3}/>\n        <Board hasBorder boardId={4}/>\n        <Board boardId={5}/>\n      </div>\n      <div>\n        <Board hasBorder boardId={6}/>\n        <Board hasBorder boardId={7}/>\n        <Board boardId={8}/>\n      </div>\n    </div>\n  );\n};\n\nexport default SuperBoard;\n","import React from 'react';\nimport './game.css';\nimport Title from '../../assets/title.png';\nimport Logo from '../../assets/logo.png';\nimport SuperBoard from \"../SuperBoard\";\nimport {useSuperBoard} from \"../../hooks/superBoard\";\n\nconst Game = () => {\n  const { restart, winner, endGame } = useSuperBoard()\n\n  return (\n    <div className=\"game\">\n      <div>\n        <img id=\"imgjogo\" src={Logo} alt=\"Jogo da velha\"/>\n        <img src={Title} alt=\"Jogo da velha\"/>\n      </div>\n      <div>\n        <SuperBoard/>\n        {\n          winner ?\n            <div>\n              <div>\n                Ganhador: {winner}\n              </div>\n              <button className=\"historyButton\" onClick={() => restart()}>Vá para o início do jogo</button>\n            </div> :\n            endGame &&\n            <div>\n              <h1>\n                Deu velha!\n              </h1>\n              <button className=\"historyButton\" onClick={() => restart()}>Vá para o início do jogo</button>\n            </div>\n        }\n      </div>\n    </div>\n  );\n\n}\n\nexport default Game;\n","import Game from \"./components/Game\";\nimport SuperBoardProvider from \"./hooks/superBoard\";\n\n\nfunction App() {\n  return (\n    <SuperBoardProvider>\n      <Game />\n    </SuperBoardProvider>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}