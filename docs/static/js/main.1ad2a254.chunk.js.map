{"version":3,"sources":["components/utils/calculateWinner.js","hooks/superBoard/superBoardProvider.js","hooks/superBoard/useSuperBoard/useSuperBoard.js","components/Square/square.js","components/Winner/Winner.js","components/Board/board.js","components/SuperBoard/SuperBoard.js","components/Title/Title.js","components/Game/game.js","App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","squares","validSquares","reduce","acc","cur","push","lines","i","length","a","b","c","SuperBoardContext","React","createContext","InitialState","boards","Array","fill","winner","availableMoves","stepNumber","xIsNext","lastMove","endGame","superBoardReducer","state","action","type","map","board","index","boardId","boardIndex","square","squareIndex","flat","filter","Boolean","winners","bindex","sindex","squareId","SuperBoardProvider","children","useReducer","dispatch","contextValue","useMemo","Provider","value","UseSuperBoard","useContext","checkAvailableMoves","restart","updateTurn","setWinner","setDraw","setSuperWinner","Square","props","useSuperBoard","className","onClick","Winner","superWinner","imageUrl","classnames","width","height","src","alt","Board","hasBorder","useEffect","SuperBoard","Title","Game","random","randomPlay","Math","floor","simulateTurns","firstMove","hasMoves","hasWinner","numericBoard","turn","play","scoreManager","scores","forEach","player","pos","classification","trials","_board","slice","bestMove","moves","_scores","score","move","indexOf","max","_superBoard","isDraw","iaTurn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ad2a254.chunk.js","sourcesContent":["export const calculateWinner = (squares) => {\n  const validSquares = squares.reduce((acc, cur) => {\n    acc.push(cur === 'D' ? null : cur)\n    return acc\n  }, [])\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (validSquares[a] && validSquares[a] === validSquares[b] && validSquares[a] === validSquares[c]) {\n      return validSquares[a];\n    }\n  }\n  return null;\n}\n","import React, {useMemo, useReducer} from 'react';\n\nexport const SuperBoardContext = React.createContext()\n\nconst checkAvailableMoves = (boards) => boards.map((board, boardIndex) => {\n  if(board.winner !== null) return null\n  return board.squares.map((square, squareIndex) => {\n    if (square !== null) return null\n    return [boardIndex, squareIndex]\n  })\n}).flat()\n\nconst InitialState = {\n  boards: Array(9).fill({\n    squares: Array(9).fill(null),\n    winner: null\n  }),\n  availableMoves: Array(9).fill(Array(9).fill(null)),\n  winner: null,\n  stepNumber: 0,\n  xIsNext: true,\n  lastMove: null,\n  endGame: false\n}\n\nexport const superBoardReducer = (state, action) => {\n  switch (action.type) {\n    case 'RESTART':\n      return InitialState\n    case 'SET_SUPER_WINNER':\n      return {\n        ...state,\n        winner: action.winner\n      }\n    case 'SET_DRAW':\n      return {\n        ...state,\n        boards: state.boards.map((board, index) => {\n          if (index !== action.boardId) return board\n          return {\n            ...board,\n            winner: 'D'\n          }\n        }),\n      }\n    case 'SET_WINNER':\n      return {\n        ...state,\n        boards: state.boards.map((board, index) => {\n          if (index !== action.boardId) return board\n          return {\n            ...board,\n            winner: state.xIsNext ? 'O' : 'X'\n          }\n        }),\n      }\n    case 'SET_AVAILABLE_MOVES':\n      const availableMoves = checkAvailableMoves(state.boards)\n      const endGame = availableMoves.filter(Boolean).length < 1 || state.winners?.filter(Boolean).length > 7 || state.boards.map(board => board.squares.filter(Boolean).length > 7).filter(Boolean).length > 7\n\n      return {\n        ...state,\n        availableMoves,\n        endGame\n      }\n    case 'UPDATE_TURN':\n      return {\n        ...state,\n        boards: state.boards.map((board, bindex) => {\n          if (bindex !== action.boardId) return board\n          return {\n            ...board,\n            squares: board.squares.map((square, sindex) => {\n              if (sindex !== action.squareId) return square\n              return state.xIsNext ? 'X' : 'O'\n            })\n          }\n        }),\n        lastMove: [action.boardId, action.squareId],\n        stepNumber: state.stepNumber + 1,\n        xIsNext: !state.xIsNext,\n      }\n    default:\n      return state\n  }\n}\nconst SuperBoardProvider = ({ children}) => {\n  const [state, dispatch] = useReducer(superBoardReducer, InitialState)\n  const contextValue = useMemo(() => ({state, dispatch}), [state, dispatch])\n\n  return <SuperBoardContext.Provider value={contextValue}>{children}</SuperBoardContext.Provider>\n};\n\nexport default SuperBoardProvider;\n","import {useContext} from 'react';\nimport {SuperBoardContext} from \"../superBoardProvider\";\nimport {calculateWinner} from \"../../../components/utils/calculateWinner\";\n\nconst UseSuperBoard = (boardId) => {\n  const { state: {boards, stepNumber, xIsNext, winner, endGame, availableMoves, lastMove}, dispatch } = useContext(SuperBoardContext)\n\n  const winners = boards.map(board => board.winner)\n\n  const calculateSuperWinner = () => {\n    return calculateWinner(winners)\n  }\n\n  return {\n    boards,\n    stepNumber,\n    xIsNext,\n    winner,\n    endGame,\n    board: boards[boardId],\n    availableMoves,\n    lastMove,\n    checkAvailableMoves: () => dispatch({ type: 'SET_AVAILABLE_MOVES'}),\n    restart: () => dispatch({type: 'RESTART'}),\n    updateTurn: (boardId, squareId) => dispatch({type: 'UPDATE_TURN', squareId, boardId}),\n    setWinner: () => dispatch({type: 'SET_WINNER', boardId}),\n    setDraw: () => dispatch({type: 'SET_DRAW', boardId}),\n    setSuperWinner: () => dispatch({type: 'SET_SUPER_WINNER', winner: calculateSuperWinner()}),\n  }\n};\n\nexport default UseSuperBoard;\n","import React from 'react';\nimport './square.css';\nimport {calculateWinner} from \"../utils/calculateWinner\";\nimport {useSuperBoard} from \"../../hooks/superBoard\";\n\nconst Square = (props) => {\n  const { squareId, boardId } = props;\n\n  const { board, updateTurn } = useSuperBoard(boardId)\n\n  const handleClick = () => {\n    if (calculateWinner(board.squares) || board.squares[squareId]) {\n      return;\n    }\n\n    updateTurn(boardId, squareId)\n  }\n\n  return (\n    <button className=\"square\" onClick={() => handleClick()}>\n      {board.squares[squareId]}\n    </button>\n  )\n}\nexport default Square;\n","import React from 'react';\nimport './Winner.css'\nimport classnames from \"classnames\";\n\nconst Winner = (props) => {\n  const { winner, superWinner } = props\n\n  const imageUrl = winner === 'X'\n    ? 'https://contmoura.com.br/wp-content/uploads/2019/09/x-png-icon-8.png'\n    : 'https://i.imgur.com/rCwsdBw.png'\n\n  return <div className={classnames('image-wrapper', {\n    'super': superWinner\n  })}>\n    <img width='100%' height='100%' className='image' src={imageUrl} alt={winner}/>\n  </div>\n};\n\nexport default Winner;\n","import React, {useEffect} from 'react';\nimport Square from '../Square';\nimport './board.css';\nimport classnames from \"classnames\";\nimport {useSuperBoard} from \"../../hooks/superBoard\";\nimport {calculateWinner} from \"../utils/calculateWinner\";\nimport Winner from \"../Winner\";\n\nconst Board = (props) => {\n  const { hasBorder = false, boardId } = props\n  const { board, setWinner, setDraw } = useSuperBoard(boardId)\n\n  const winner = calculateWinner(board.squares)\n\n  useEffect(() => {\n    if (winner) {\n      setWinner()\n      return\n    }\n    if (board.length > 8){\n      setDraw()\n    }\n    // eslint-disable-next-line\n  }, [winner])\n\n  return (\n    <div className=\"board-wrapper\">\n      { winner && <Winner winner={winner} />}\n      <div className=\"board-row\">\n        <Square squareId={0} boardId={boardId}/>\n        <Square squareId={1} boardId={boardId}/>\n        <Square squareId={2} boardId={boardId}/>\n      </div>\n      <div className=\"board-row\">\n        <Square squareId={3} boardId={boardId}/>\n        <Square squareId={4} boardId={boardId}/>\n        <Square squareId={5} boardId={boardId}/>\n      </div>\n      <div className={classnames(\"board-row\", {\n        'board-border': hasBorder\n      })}>\n        <Square squareId={6} boardId={boardId}/>\n        <Square squareId={7} boardId={boardId}/>\n        <Square squareId={8} boardId={boardId}/>\n      </div>\n    </div>\n  );\n\n}\n\nexport default Board;\n","import React, {useEffect} from 'react';\nimport Board from \"../Board\";\nimport {useSuperBoard} from \"../../hooks/superBoard\";\nimport './superBoard.css'\nimport Winner from \"../Winner\";\n\nconst SuperBoard = () => {\n  const { boards, winner, setSuperWinner } = useSuperBoard()\n\n  useEffect(() => {\n    setSuperWinner()\n    // eslint-disable-next-line\n  }, [boards])\n\n  return (\n    <div className=\"super-board-wrapper\">\n      { winner && <Winner winner={winner} superWinner/>}\n      <div className=\"board-border-right\">\n        <Board hasBorder boardId={0}/>\n        <Board hasBorder boardId={1}/>\n        <Board boardId={2}/>\n      </div>\n      <div className=\"board-border-right\">\n        <Board hasBorder boardId={3}/>\n        <Board hasBorder boardId={4}/>\n        <Board boardId={5}/>\n      </div>\n      <div>\n        <Board hasBorder boardId={6}/>\n        <Board hasBorder boardId={7}/>\n        <Board boardId={8}/>\n      </div>\n    </div>\n  );\n};\n\nexport default SuperBoard;\n","import React from 'react';\nimport './Title.css'\n\nfunction Title() {\n  return (\n    <div className='wrapper'>\n      <h1 className='title'>\n        <span>Ultimate</span>\n        <span>Ultimate</span>\n      </h1>\n      <h2 className='subtitle'>Tic Tac Toe</h2>\n    </div>\n  );\n}\n\nexport default Title;\n","import React, {useEffect} from 'react';\nimport './game.css';\nimport SuperBoard from \"../SuperBoard\";\nimport {useSuperBoard} from \"../../hooks/superBoard\";\nimport {calculateWinner} from \"../utils/calculateWinner\";\nimport Title from \"../Title\";\n\nconst Game = () => {\n  const { restart, boards, winner, endGame, stepNumber, xIsNext, lastMove, checkAvailableMoves, updateTurn } = useSuperBoard()\n\n  const random = (board) => {\n    let randomPlay = Math.floor(Math.random() * (board.length + 1))\n    if (board[randomPlay] !== null) {\n      return random(board)\n    }\n    return randomPlay\n  }\n\n  const simulateTurns = (board, firstMove = -1) => {\n    const hasMoves = board.filter(square => !square).length > 0\n    const hasWinner = calculateWinner(board)\n    if (hasMoves && !hasWinner) {\n      const numericBoard = board.map(square => {\n        if (square === 'X') return 1\n        else if (square === 'O') return 0\n        return square\n      })\n\n      const turn = numericBoard.reduce((acc, cur) => {\n        if (cur === 1) acc++\n        else if (cur === 0) acc--\n        return acc\n      }) ? 'O' : 'X'\n\n      const play = random(board)\n      board[play] = turn\n      firstMove = firstMove === -1 ? play : -1\n      return simulateTurns(board, firstMove)\n    }\n    return [hasWinner, firstMove]\n  }\n\n  const scoreManager = (board, scores, winner) => {\n    if(winner === 'O') {\n      board.forEach((player, pos) => {\n        if (player === 'O') scores[pos] += 1\n        if (player === 'X') scores[pos] -= 1\n      })\n    } else if (winner === 'X') {\n      board.forEach((player, pos) => {\n        if (player === 'O') scores[pos] -= 1\n        if (player === 'X') scores[pos] += 1\n      })\n    }\n    return scores\n  }\n\n  const classification = (board, trials) => {\n    let scores = Array(9).fill(0)\n    for (let i = 0; i < trials; i++) {\n      const _board = board.slice()\n      const [ winner ] = simulateTurns(_board)\n      scores = scoreManager(_board, scores, winner)\n    }\n    return scores\n  }\n\n  const bestMove = (moves, board, scores) => {\n    let _scores = scores.slice()\n    _scores.forEach((score, move) => {\n      if (!(move in moves)) {\n        return _scores[move] = -1\n      }\n      if (board[move]) {\n        return _scores[move] = -1\n      }\n    })\n    return _scores.indexOf(Math.max(..._scores))\n  }\n\n  const iaTurn = () => {\n    let [ boardId ] = lastMove\n\n    let hasMoves = boards[boardId].squares.filter(square => !square).length > 0\n    let hasWinner = calculateWinner(boards[boardId].squares)\n\n    if (hasWinner || !hasMoves) {\n\n      let _superBoard = boards.map((board, pos) => {\n\n        let winner = null\n\n        if ( pos === boardId && hasWinner) return hasWinner\n        if ( board.winner ) return board.winner\n\n        const isDraw = board.squares.filter(Boolean).length > 7\n\n        if (board.winner === null && isDraw) {\n          winner = -1\n        }\n\n        return winner\n      }).slice()\n\n      const scores = classification(_superBoard, 20)\n\n      let moves = _superBoard.map((move, pos) => {\n        if (move) return pos\n      })\n\n     boardId = bestMove(moves, _superBoard, scores)\n    }\n\n    let _board = boards[boardId].squares.slice()\n\n    const scores = classification(_board, 20)\n\n    let moves = _board.map((move, pos) => {\n      if (move) return pos\n    })\n\n    const move = bestMove(moves, _board, scores)\n\n    updateTurn(boardId, move)\n  }\n\n  useEffect(() => {\n    checkAvailableMoves()\n    if (!xIsNext && stepNumber > 0){\n      iaTurn()\n    }\n    // eslint-disable-next-line\n  }, [xIsNext])\n\n  return (\n    <div className=\"game\">\n      <Title/>\n      <div>\n        <SuperBoard/>\n        {\n          winner ?\n            <div>\n              <div>\n                Ganhador: {winner}\n              </div>\n              <button className=\"historyButton\" onClick={() => restart()}>Vá para o início do jogo</button>\n            </div> :\n            endGame &&\n            <div>\n              <h1>\n                Deu velha!\n              </h1>\n              <button className=\"historyButton\" onClick={() => restart()}>Vá para o início do jogo</button>\n            </div>\n        }\n      </div>\n    </div>\n  );\n\n}\n\nexport default Game;\n","import Game from \"./components/Game\";\nimport SuperBoardProvider from \"./hooks/superBoard\";\n\n\nfunction App() {\n  return (\n    <SuperBoardProvider>\n      <Game />\n    </SuperBoardProvider>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}